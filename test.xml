<?xml version="1.0" encoding="UTF-8"?>
<!-- Tests compiled with Criterion v2.3.2 -->
<testsuites name="Criterion Tests" tests="43" failures="14" errors="2" disabled="0">
  <testsuite name="rangeset_merge_touching" tests="41" failures="12" errors="0" disabled="0" skipped="0" time="0.077">
    <testcase name="insert" assertions="10" status="FAILED" time="0.000">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:17: The expression (it2->second) == (it1->second) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="8" status="FAILED" time="0.000">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:17: The expression (it2->second) == (it1->second) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="9" status="FAILED" time="0.002">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:16: The expression (it2->first) == (it1->first) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="7" status="FAILED" time="0.001">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:16: The expression (it2->first) == (it1->first) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="6" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="6" status="PASSED" time="0.003">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.006">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.001">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.002">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.004">
    </testcase>
    <testcase name="insert" assertions="6" status="PASSED" time="0.004">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.003">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="12" status="FAILED" time="0.000">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:17: The expression (it2->second) == (it1->second) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.004">
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.006">
    </testcase>
    <testcase name="insert" assertions="1" status="FAILED" time="0.005">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:23: The expression (true) == (set.data.size() % 2 == 0) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.002">
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.004">
    </testcase>
    <testcase name="insert" assertions="18" status="PASSED" time="0.004">
    </testcase>
    <testcase name="insert" assertions="1" status="FAILED" time="0.003">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:23: The expression (true) == (set.data.size() % 2 == 0) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="1" status="FAILED" time="0.001">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:23: The expression (true) == (set.data.size() % 2 == 0) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="10" status="FAILED" time="0.001">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:12: The expression (expected.size()) == (set.size()) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="1" status="FAILED" time="0.004">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:23: The expression (true) == (set.data.size() % 2 == 0) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="10" status="FAILED" time="0.006">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:12: The expression (expected.size()) == (set.size()) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="18" status="PASSED" time="0.006">
    </testcase>
    <testcase name="insert" assertions="14" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="10" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="6" status="PASSED" time="0.000">
    </testcase>
    <testcase name="insert" assertions="4" status="FAILED" time="0.001">
      <failure type="assert" message="1 assertion(s) failed.">test.cpp:12: The expression (expected.size()) == (set.size()) is false.&#10;</failure>
    </testcase>
    <testcase name="insert" assertions="2" status="PASSED" time="0.000">
    </testcase>
  </testsuite>
  <testsuite name="rangeset" tests="2" failures="2" errors="2" disabled="0" skipped="0" time="0.000">
    <testcase name="erase" assertions="0" status="ERRORED" time="0.000">
      <error type="crash" message="The test crashed." />    </testcase>
    <testcase name="insert2" assertions="0" status="ERRORED" time="0.000">
      <error type="crash" message="The test crashed." />    </testcase>
  </testsuite>
</testsuites>
